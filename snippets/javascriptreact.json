{
	/*
		// Place your snippets for JavaScript React (Babel) here. Each snippet is defined under a snippet name and has a prefix, body and
		// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
		// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
		// same ids are connected.
		// Example:
		"Print to console": {
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		}
	*/
		"Arrow function": {
			"prefix": "af",
			"body": "(${1:arguments}) => {\n\t${0}\n}",
			"description": "Arrow function with body"
		},
		"bindThis": {
			"prefix": "bind",
			"body": "this.$1 = this.$1.bind(this);",
			"description": "Binds the this of a method. To be used inside a constructor"
		},
		"console.log": {
			"prefix": "log",
			"body": [
				"console.log('$1', $1);"
			],
			"description": "Log output to console"
		},
		"classConstructor": {
			"prefix": "con",
			"body": "constructor(props) {\n\tsuper(props);\n\t$0\n}\n",
			"description": "Adds a default constructor for the class that contains props as arguments"
		},
		"componentDidMount": {
			"prefix": "cdm",
			"body": "componentDidMount() {\n\t$0\n}\n",
			"description": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs."
		},
		"componentWillReceiveProps": {
			"prefix": "cwr",
			"body": "componentWillReceiveProps(nextProps) {\n\t$0\n}\n",
			"description": "Invoked when a component is receiving new props. This method is not called for the initial render."
		},
		"componentSetStateObject": {
			"prefix": "sst",
			"body": "this.setState({$0})",
			"description": "Performs a shallow merge of nextState into current state"
		},
		"Object.assign": {
			"prefix": "oa",
			"body": "Object.assign(${1:dest}, ${2:source})",
			"description": "Object.assign"
		},
		"Object.keys": {
			"prefix": "ok",
			"body": "Object.keys(${1:obj})",
			"description": "Object.keys"
		},
		"Promise.all": {
			"prefix": "pa",
			"body": "Promise.all([${1:value}])",
			"description": "Promise.all"
		},
		"Promise.resolve": {
			"prefix": "prs",
			"body": "Promise.resolve(${1:value})",
			"description": "Promise.resolve"
		},
		"Promise.reject": {
			"prefix": "prj",
			"body": "Promise.reject(${1:value})",
			"description": "Promise.reject"
		},
		"reactClassCompoment": {
			"prefix": "rcc",
			"body": "import React, {Component} from 'react'\n\nclass ${1:componentName} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:componentName}",
			"description": "Creates a React component class with ES6 module system"
		},
		"reactClassCompomentPropTypes": {
			"prefix": "rccp",
			"body": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:componentName} extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:componentName}.propTypes = {\n\n};\n\nexport default ${1:componentName};",
			"description": "Creates a React component class with PropTypes and ES6 module system"
		},
		"setTimeout": {
			"prefix": "st",
			"body": "setTimeout(() => {\n\t${0}\n}, ${1:delay})",
			"description": "setTimeout"
		},
		"setInterval": {
			"prefix": "si",
			"body": "setInterval(() => {\n\t${0}\n}, ${1:delay})",
			"description": "setInterval"
		}
	}
